---
# Create, get and delete a user
- config:
    - testset: "User CRUD Tests"

- test:
    - group: "USER SANE CRUD"
    - name: "Make sure Mr alfred_testuser ISN'T there to begin with"
    - url: "/user/alfred_testuser"
    - expected_status: [404]

- test:
    - group: "USER SANE CRUD"
    - name: "Create alfred"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "alfred_testuser",
                "passwd": "exemplepwd",
                "service": "user",
                "email": "alfred@noemail.com",
                "name": "Alfred (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}

- test:
    - group: "USER SANE CRUD"
    - name: "Make sure Mr alfred is there after we added him"
    - url: "/user/alfred_testuser"

- test:
    - group: "USER SANE CRUD"
    - name: "Get rid of alfred!"
    - url: "/user/alfred_testuser"
    - method: 'DELETE'

- test:
    - group: "USER SANE CRUD"
    - name: "Make sure Mr alfred ISN'T there after we deleted him"
    - url: "/user/alfred"
    - expected_status: [404]

# invalid user create request
- test:
    - group: "USER CREATE INVALID USERNAME"
    - name: "Should not create username initied by123user"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "123user",
                "passwd": "irrelevant",
                "service": "user",
                "email": "irrelevant@noemail.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]

- test:
    - group: "USER CREATE INVALID USERNAME"
    - name: "Should not create especial character us@er"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "us@er",
                "passwd": "irrelevant",
                "service": "user",
                "email": "irrelevant@noemail.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]

- test:
    - group: "USER CREATE INVALID USERNAME"
    - name: "Should not create null name user"
    - url: "/user"
    - method: "POST"
    - body: '{
                "passwd": "irrelevant",
                "service": "user",
                "email": "irrelevant@noemail.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]


- test:
    - group: "USER CREATE INVALID USERNAME"
    - name: "Should not create zerolen name user"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "",
                "passwd": "irrelevant",
                "service": "user",
                "email": "irrelevant@noemail.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]


- test:
    - group: "USER CREATE INVALID USERNAME"
    - name: "Should not create uppercase name user"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "IMNOTYELLYNG",
                "passwd": "irrelevant",
                "service": "user",
                "email": "irrelevant@noemail.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]


- test:
    - group: "USER CREATE INVALID USERNAME"
    - name: "Should not create underscode only username ______"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "________",
                "passwd": "irrelevant",
                "service": "user",
                "email": "irrelevant@noemail.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]

# create user invalid email

- test:
    - group: "USER CREATE INVALID EMAIL"
    - name: "Should not accept null emailt"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "validname",
                "passwd": "irrelevant",
                "service": "user",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]


- test:
    - group: "USER CREATE INVALID EMAIL"
    - name: "Should not accept email zerlen"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "validname",
                "passwd": "irrelevant",
                "service": "user",
                "email": "",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]

- test:
    - group: "USER CREATE INVALID EMAIL"
    - name: "Should not accept email withoud @"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "validname",
                "passwd": "irrelevant",
                "service": "user",
                "email": "testnoemail.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]

- test:
    - group: "USER CREATE INVALID EMAIL"
    - name: "Should not accept email withoud dot"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "validname",
                "passwd": "irrelevant",
                "service": "user",
                "email": "test@noemail",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]


- test:
    - group: "USER CREATE INVALID EMAIL"
    - name: "Should not accept email without nameserver"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "validname",
                "passwd": "irrelevant",
                "service": "user",
                "email": "test@.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]

- test:
    - group: "USER CREATE INVALID EMAIL"
    - name: "Should not accept uppercase mail"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "validname",
                "passwd": "irrelevant",
                "service": "user",
                "email": "YELLING@MAIL.COM",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]

# make some HTTP malformed requests
- test:
    - group: "USER INVALID CRUD REQUESTS"
    - name: "no mimetype on create user"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "alfred_testuser"
              }'
    - expected_status: [400]

- test:
    - group: "USER INVALID CRUD REQUESTS"
    - name: "invalid mimetype on create user"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "alfred_testuser"
              }'
    - headers: {'Content-Type': 'application/xml'}
    - expected_status: [400]

- test:
    - group: "USER SANE CRUD"
    - name: "Invalid JSON"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "alfred_testuser"
                "passwd": "exemplepwd",
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]

- test:
    - group: "USER INVALID CRUD REQUESTS"
    - name: "Delete inexistent user"
    - url: "/user/alfred_testuser"
    - method: "DELETE"
    - expected_status: [404]


# Test user unique constraint
- test:
    - group: "INVALID DUPLICATE USER CRUD"
    - name: "Create first user"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "unique_testuser",
                "passwd": "exemplepwd",
                "service": "user",
                "email": "uniqueuser@noemail.com",
                "name": "Unique (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}

- test:
    - group: "INVALID DUPLICATE USER CRUD"
    - name: "Try to create user with duplicate username"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "unique_testuser",
                "passwd": "exemplepwd",
                "service": "user",
                "email": "anotheremail@noemail.com",
                "name": "Another (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]

- test:
    - group: "INVALID DUPLICATE USER CRUD"
    - name: "Try to create user with duplicate email"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "otheruser_testuser",
                "passwd": "exemplepwd",
                "service": "user",
                "email": "uniqueuser@noemail.com",
                "name": "Another (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [400]

- test:
    - group: "INVALID DUPLICATE USER CRUD"
    - name: "Get rid of unique_testuser!"
    - url: "/user/unique_testuser"
    - method: 'DELETE'
